// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BlockCategoriesColumns holds the columns for the "block_categories" table.
	BlockCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "archived_at", Type: field.TypeTime},
		{Name: "bot_blocks", Type: field.TypeUUID},
	}
	// BlockCategoriesTable holds the schema information for the "block_categories" table.
	BlockCategoriesTable = &schema.Table{
		Name:       "block_categories",
		Columns:    BlockCategoriesColumns,
		PrimaryKey: []*schema.Column{BlockCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "block_categories_bots_blocks",
				Columns:    []*schema.Column{BlockCategoriesColumns[5]},
				RefColumns: []*schema.Column{BotsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// BlockInfosColumns holds the columns for the "block_infos" table.
	BlockInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "archived_at", Type: field.TypeTime},
		{Name: "block_category_blocks", Type: field.TypeUUID},
	}
	// BlockInfosTable holds the schema information for the "block_infos" table.
	BlockInfosTable = &schema.Table{
		Name:       "block_infos",
		Columns:    BlockInfosColumns,
		PrimaryKey: []*schema.Column{BlockInfosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "block_infos_block_categories_blocks",
				Columns:    []*schema.Column{BlockInfosColumns[5]},
				RefColumns: []*schema.Column{BlockCategoriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// BotsColumns holds the columns for the "bots" table.
	BotsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "greeting_message", Type: field.TypeString},
		{Name: "custom_propmt", Type: field.TypeString, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "archived_at", Type: field.TypeTime},
		{Name: "company_bots", Type: field.TypeUUID},
	}
	// BotsTable holds the schema information for the "bots" table.
	BotsTable = &schema.Table{
		Name:       "bots",
		Columns:    BotsColumns,
		PrimaryKey: []*schema.Column{BotsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "bots_companies_bots",
				Columns:    []*schema.Column{BotsColumns[7]},
				RefColumns: []*schema.Column{CompaniesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CompaniesColumns holds the columns for the "companies" table.
	CompaniesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "logo_url", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "archived_at", Type: field.TypeTime},
	}
	// CompaniesTable holds the schema information for the "companies" table.
	CompaniesTable = &schema.Table{
		Name:       "companies",
		Columns:    CompaniesColumns,
		PrimaryKey: []*schema.Column{CompaniesColumns[0]},
	}
	// RolesColumns holds the columns for the "roles" table.
	RolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
	}
	// RolesTable holds the schema information for the "roles" table.
	RolesTable = &schema.Table{
		Name:       "roles",
		Columns:    RolesColumns,
		PrimaryKey: []*schema.Column{RolesColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "archived_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserRolesColumns holds the columns for the "user_roles" table.
	UserRolesColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "role_id", Type: field.TypeUUID},
	}
	// UserRolesTable holds the schema information for the "user_roles" table.
	UserRolesTable = &schema.Table{
		Name:       "user_roles",
		Columns:    UserRolesColumns,
		PrimaryKey: []*schema.Column{UserRolesColumns[0], UserRolesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_roles_user_id",
				Columns:    []*schema.Column{UserRolesColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_roles_role_id",
				Columns:    []*schema.Column{UserRolesColumns[1]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserCompaniesColumns holds the columns for the "user_companies" table.
	UserCompaniesColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "company_id", Type: field.TypeUUID},
	}
	// UserCompaniesTable holds the schema information for the "user_companies" table.
	UserCompaniesTable = &schema.Table{
		Name:       "user_companies",
		Columns:    UserCompaniesColumns,
		PrimaryKey: []*schema.Column{UserCompaniesColumns[0], UserCompaniesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_companies_user_id",
				Columns:    []*schema.Column{UserCompaniesColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_companies_company_id",
				Columns:    []*schema.Column{UserCompaniesColumns[1]},
				RefColumns: []*schema.Column{CompaniesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BlockCategoriesTable,
		BlockInfosTable,
		BotsTable,
		CompaniesTable,
		RolesTable,
		UsersTable,
		UserRolesTable,
		UserCompaniesTable,
	}
)

func init() {
	BlockCategoriesTable.ForeignKeys[0].RefTable = BotsTable
	BlockInfosTable.ForeignKeys[0].RefTable = BlockCategoriesTable
	BotsTable.ForeignKeys[0].RefTable = CompaniesTable
	UserRolesTable.ForeignKeys[0].RefTable = UsersTable
	UserRolesTable.ForeignKeys[1].RefTable = RolesTable
	UserCompaniesTable.ForeignKeys[0].RefTable = UsersTable
	UserCompaniesTable.ForeignKeys[1].RefTable = CompaniesTable
}
